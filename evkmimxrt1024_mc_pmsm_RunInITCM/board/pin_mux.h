/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PIN_MUX_H_
#define _PIN_MUX_H_

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/

/* Define the flexspi macro. Note that it can't be modified here */
#define IOMUXC_GPIO_AD_B1_00_FLEXSPI_A_DATA03 0x401F80FCU, 0x1U, 0x401F8374U, 0x1U, 0x401F8270U
#define IOMUXC_GPIO_AD_B1_01_FLEXSPI_A_SCLK 0x401F8100U, 0x1U, 0x401F8378U, 0x1U, 0x401F8274U
#define IOMUXC_GPIO_AD_B1_02_FLEXSPI_A_DATA00 0x401F8104U, 0x1U, 0x401F8368U, 0x1U, 0x401F8278U
#define IOMUXC_GPIO_AD_B1_03_FLEXSPI_A_DATA02 0x401F8108U, 0x1U, 0x401F8370U, 0x1U, 0x401F827CU
#define IOMUXC_GPIO_AD_B1_04_FLEXSPI_A_DATA01 0x401F810CU, 0x1U, 0x401F836CU, 0x1U, 0x401F8280U
#define IOMUXC_GPIO_AD_B1_05_FLEXSPI_A_SS0_B 0x401F8110U, 0x1U, 0, 0, 0x401F8284U

/*! @brief Direction type  */
typedef enum _pin_mux_direction
{
  kPIN_MUX_DirectionInput = 0U,         /* Input direction */
  kPIN_MUX_DirectionOutput = 1U,        /* Output direction */
  kPIN_MUX_DirectionInputOrOutput = 2U  /* Input or output direction */
} pin_mux_direction_t;

/*!
 * @addtogroup pin_mux
 * @{
 */

/***********************************************************************************************************************
 * API
 **********************************************************************************************************************/

#if defined(__cplusplus)
extern "C" {
#endif

/*!
 * @brief Calls initialization functions.
 *
 */
void BOARD_InitBootPins(void);

/* GPIO_SD_B1_02 (number 30), I2C4_SCL/J19[20] */
#define BOARD_INITPINS_TP_GPIO                                             GPIO3   /*!< GPIO device name: GPIO3 */
#define BOARD_INITPINS_TP_PORT                                             GPIO3   /*!< PORT device name: GPIO3 */
#define BOARD_INITPINS_TP_PIN                                                22U   /*!< GPIO3 pin index: 22 */


/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitPins(void);

/* GPIO_AD_B0_07 (number 101), UART1_RXD/J17[8] */
#define BOARD_INITLPUART_UART1_RXD_PERIPHERAL                            LPUART1   /*!< Device name: LPUART1 */
#define BOARD_INITLPUART_UART1_RXD_SIGNAL                                     RX   /*!< LPUART1 signal: RX */

/* GPIO_AD_B0_06 (number 105), UART1_TXD/J17[12] */
#define BOARD_INITLPUART_UART1_TXD_PERIPHERAL                            LPUART1   /*!< Device name: LPUART1 */
#define BOARD_INITLPUART_UART1_TXD_SIGNAL                                     TX   /*!< LPUART1 signal: TX */


/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitLPUART(void);

/* GPIO_EMC_26 (number 130), SEMC_A11/U14[35]/BT_CFG[8] */
#define BOARD_INITPWM_SEMC_A11_PERIPHERAL                                   PWM1   /*!< Device name: PWM1 */
#define BOARD_INITPWM_SEMC_A11_SIGNAL                                          A   /*!< PWM1 signal: A */
#define BOARD_INITPWM_SEMC_A11_CHANNEL                                        0U   /*!< PWM1 A channel: 0 */

/* GPIO_EMC_27 (number 129), SEMC_A12/U14[36]/BT_CFG[9] */
#define BOARD_INITPWM_SEMC_A12_PERIPHERAL                                   PWM1   /*!< Device name: PWM1 */
#define BOARD_INITPWM_SEMC_A12_SIGNAL                                          B   /*!< PWM1 signal: B */
#define BOARD_INITPWM_SEMC_A12_CHANNEL                                        0U   /*!< PWM1 B channel: 0 */

/* GPIO_EMC_24 (number 132), SEMC_A8/U14[33]/BT_CFG[6] */
#define BOARD_INITPWM_SEMC_A8_PERIPHERAL                                    PWM1   /*!< Device name: PWM1 */
#define BOARD_INITPWM_SEMC_A8_SIGNAL                                           A   /*!< PWM1 signal: A */
#define BOARD_INITPWM_SEMC_A8_CHANNEL                                         1U   /*!< PWM1 A channel: 1 */

/* GPIO_EMC_25 (number 131), SEMC_A9/U14[34]/BT_CFG[7] */
#define BOARD_INITPWM_SEMC_A9_PERIPHERAL                                    PWM1   /*!< Device name: PWM1 */
#define BOARD_INITPWM_SEMC_A9_SIGNAL                                           B   /*!< PWM1 signal: B */
#define BOARD_INITPWM_SEMC_A9_CHANNEL                                         1U   /*!< PWM1 B channel: 1 */

/* GPIO_EMC_22 (number 136), SEMC_A6/U14[31]/BT_CFG[4] */
#define BOARD_INITPWM_SEMC_A6_PERIPHERAL                                    PWM1   /*!< Device name: PWM1 */
#define BOARD_INITPWM_SEMC_A6_SIGNAL                                           A   /*!< PWM1 signal: A */
#define BOARD_INITPWM_SEMC_A6_CHANNEL                                         2U   /*!< PWM1 A channel: 2 */

/* GPIO_EMC_23 (number 133), SEMC_A7/U14[32]/BT_CFG[5] */
#define BOARD_INITPWM_SEMC_A7_PERIPHERAL                                    PWM1   /*!< Device name: PWM1 */
#define BOARD_INITPWM_SEMC_A7_SIGNAL                                           B   /*!< PWM1 signal: B */
#define BOARD_INITPWM_SEMC_A7_CHANNEL                                         2U   /*!< PWM1 B channel: 2 */


/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitPWM(void);

/* GPIO_AD_B1_12 (number 78), USB_OTG1_OC/J18[6] */
#define DOARD_INITADC_VOLT_DCB_PERIPHERAL                                   ADC1   /*!< Device name: ADC1 */
#define DOARD_INITADC_VOLT_DCB_SIGNAL                                         IN   /*!< ADC1 signal: IN */
#define DOARD_INITADC_VOLT_DCB_CHANNEL                                       12U   /*!< ADC1 IN channel: 12 */

/* GPIO_AD_B1_09 (number 81), CUR2_C */
#define DOARD_INITADC_CUR2_C_PERIPHERAL                                     ADC1   /*!< Device name: ADC1 */
#define DOARD_INITADC_CUR2_C_SIGNAL                                           IN   /*!< ADC1 signal: IN */
#define DOARD_INITADC_CUR2_C_CHANNEL                                          9U   /*!< ADC1 IN channel: 9 */

/* GPIO_AD_B1_08 (number 82), CUR2_B */
#define DOARD_INITADC_CUR2_B_PERIPHERAL                                     ADC1   /*!< Device name: ADC1 */
#define DOARD_INITADC_CUR2_B_SIGNAL                                           IN   /*!< ADC1 signal: IN */
#define DOARD_INITADC_CUR2_B_CHANNEL                                          8U   /*!< ADC1 IN channel: 8 */

/* GPIO_AD_B1_14 (number 75), CUR2_A */
#define DOARD_INITADC_CUR2_A_PERIPHERAL                                     ADC1   /*!< Device name: ADC1 */
#define DOARD_INITADC_CUR2_A_SIGNAL                                           IN   /*!< ADC1 signal: IN */
#define DOARD_INITADC_CUR2_A_CHANNEL                                         14U   /*!< ADC1 IN channel: 14 */


/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void DOARD_InitADC(void);


/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitENC(void);


/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void BOARD_InitCMP(void);

#if defined(__cplusplus)
}
#endif

/*!
 * @}
 */
#endif /* _PIN_MUX_H_ */

/***********************************************************************************************************************
 * EOF
 **********************************************************************************************************************/
